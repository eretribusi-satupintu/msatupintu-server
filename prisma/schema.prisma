generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Roles {
  id         Int      @id @default(autoincrement())
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  user       User[]

  @@map("roles")
}

model User {
  id              Int             @id @default(autoincrement())
  role_id         Int
  name            String
  email           String          @unique
  password        String
  nik             String?         @unique
  pin             Int?
  phone_number    String
  photo_profile   String?
  alamat          String
  roles           Roles?          @relation(fields: [role_id], references: [id])
  petugas         Petugas?
  wajib_retribusi WajibRetribusi?
  created_at      DateTime        @default(now())
  updated_at      DateTime        @default(now()) @updatedAt

  @@map("users")
}

model Petugas {
  id                Int                 @id @default(autoincrement())
  user_id           Int                 @unique
  subwilayah_id     Int
  subwilayah        SubWilayah          @relation(fields: [subwilayah_id], references: [id])
  users             User                @relation(fields: [user_id], references: [id])
  created_at        DateTime            @default(now())
  updated_at        DateTime            @default(now()) @updatedAt
  PetugasSubWilayah PetugasSubWilayah[]
  TransaksiPetugas  TransaksiPetugas[]
  Setoran           Setoran[]
  TagihanManual     TagihanManual[]

  @@index([subwilayah_id], map: "petugas_subwilayah_id_fkey")
  @@map("petugas")
}

model PetugasSubWilayah {
  petugas_id     Int
  sub_wilayah_id Int
  petugas        Petugas    @relation(fields: [petugas_id], references: [id])
  sub_wilayah    SubWilayah @relation(fields: [sub_wilayah_id], references: [id])
  created_at     DateTime   @default(now())
  updated_at     DateTime   @default(now()) @updatedAt

  @@id([petugas_id, sub_wilayah_id])
  @@map("petugas_sub_wilayah")
}

model TransaksiPetugas {
  id         Int                    @id @default(autoincrement())
  tagihan_id Int                    @unique
  petugas_id Int
  setoran_id Int?
  tagihan    Tagihan                @relation(fields: [tagihan_id], references: [id])
  petugas    Petugas                @relation(fields: [petugas_id], references: [id])
  setoran    Setoran?               @relation(fields: [setoran_id], references: [id])
  nominal    Float
  status     TransaksiPetugasStatus @default(SUCCESS)
  is_stored  Boolean                @default(false)
  created_at DateTime               @default(now())
  updated_at DateTime               @default(now()) @updatedAt

  @@map("transaksi_petugas")
}

model WajibRetribusi {
  id         Int       @id @default(autoincrement())
  user_id    Int       @unique
  kontrak    Kontrak[]
  users      User      @relation(fields: [user_id], references: [id])
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt

  @@map("wajib_retribusi")
}

model Kabupaten {
  id         Int         @id @default(autoincrement())
  nama       String
  kedinasan  Kedinasan[]
  created_at DateTime    @default(now())
  updated_at DateTime    @default(now()) @updatedAt

  @@map("kabupaten")
}

model Kedinasan {
  id           Int         @id @default(autoincrement())
  kabupaten_id Int
  nama         String
  kabupaten    Kabupaten   @relation(fields: [kabupaten_id], references: [id])
  retribusi    Retribusi[]
  created_at   DateTime    @default(now())
  updated_at   DateTime    @default(now()) @updatedAt

  @@index([kabupaten_id], map: "kedinasan_kabupaten_id_fkey")
  @@map("kedinasan")
}

model SubWilayah {
  id                Int                 @id @default(autoincrement())
  retribusi_id      Int                 @default(1)
  nama              String
  kontrak           Kontrak[]
  petugas           Petugas[]
  retribusi         Retribusi           @relation(fields: [retribusi_id], references: [id])
  created_at        DateTime            @default(now())
  updated_at        DateTime            @default(now()) @updatedAt
  PetugasSubWilayah PetugasSubWilayah[]
  Setoran           Setoran[]
  TagihanManual     TagihanManual[]

  @@map("sub_wilayah")
}

model Retribusi {
  id             Int             @id @default(autoincrement())
  kedinasan_id   Int
  nama           String
  item_retribusi ItemRetribusi[]
  kedinasan      Kedinasan       @relation(fields: [kedinasan_id], references: [id])
  created_at     DateTime        @default(now())
  updated_at     DateTime        @default(now()) @updatedAt
  SubWilayah     SubWilayah[]

  @@index([kedinasan_id], map: "retribusi_kedinasan_id_fkey")
  @@map("retribusi")
}

model ItemRetribusi {
  id            Int             @id @default(autoincrement())
  retribusi_id  Int
  kategori_nama String
  jenis_tagihan Jenistagihan
  harga         Float
  retribusi     Retribusi       @relation(fields: [retribusi_id], references: [id])
  kontrak       Kontrak[]
  created_at    DateTime        @default(now())
  updated_at    DateTime        @default(now()) @updatedAt
  TagihanManual TagihanManual[]

  @@index([retribusi_id], map: "item_retribusi_retribusi_id_fkey")
  @@map("item_retribusi")
}

model Kontrak {
  id                 Int            @id @default(autoincrement())
  wajib_retribusi_id Int
  item_retribusi_id  Int
  sub_wilayah_id     Int
  status             StatusKontrak  @default(DIPROSES)
  item_retribusi     ItemRetribusi  @relation(fields: [item_retribusi_id], references: [id])
  sub_wilayah        SubWilayah     @relation(fields: [sub_wilayah_id], references: [id])
  wajib_retribusi    WajibRetribusi @relation(fields: [wajib_retribusi_id], references: [id])
  tagihan            Tagihan[]
  tanggal_mulai      DateTime
  tanggal_selesai    DateTime
  created_at         DateTime       @default(now())
  updated_at         DateTime       @default(now()) @updatedAt

  @@index([item_retribusi_id], map: "kontrak_item_retribusi_id_fkey")
  @@index([sub_wilayah_id], map: "kontrak_sub_wilayah_id_fkey")
  @@index([wajib_retribusi_id], map: "kontrak_wajib_retribusi_id_fkey")
  @@map("kontrak")
}

model Tagihan {
  id               Int               @id @default(autoincrement())
  kontrak_id       Int
  nama             String
  total_harga      Float
  status           StatusBayar       @default(NEW)
  invoice_id       String            @unique
  request_id       String            @unique
  active           Boolean           @default(false)
  Pembayaran       Pembayaran[]
  kontrak          Kontrak           @relation(fields: [kontrak_id], references: [id])
  jatuh_tempo      DateTime          @default(now())
  payment_time     DateTime?
  created_at       DateTime          @default(now())
  updated_at       DateTime          @default(now()) @updatedAt
  TransaksiPetugas TransaksiPetugas?
  CheckoutPayment  CheckoutPayment[]

  @@index([kontrak_id], map: "tagihan_kontrak_id_fkey")
  @@map("tagihan")
}

model TagihanManual {
  id                Int                 @id @default(autoincrement())
  item_retribusi_id Int
  petugas_id        Int
  sub_wilayah_id    Int
  setoran_id        Int?
  detail_tagihan    String
  total_harga       Int
  status            StatusTagihanManual
  item_retribusi    ItemRetribusi       @relation(fields: [item_retribusi_id], references: [id])
  paid_at           DateTime?
  created_at        DateTime            @default(now())
  updated_at        DateTime            @default(now()) @updatedAt
  is_stored         Boolean             @default(false)
  petugas           Petugas             @relation(fields: [petugas_id], references: [id])
  subwilayah        SubWilayah          @relation(fields: [sub_wilayah_id], references: [id])
  setoran           Setoran?            @relation(fields: [setoran_id], references: [id])

  @@map("tagihan_manual")
}

model Pembayaran {
  id                Int              @id @default(autoincrement())
  tagihan_id        Int
  metode_pembayaran MetodePembayaran
  status            Status
  tagihan           Tagihan          @relation(fields: [tagihan_id], references: [id])
  virtual_account   VirtualAccount[]
  created_at        DateTime         @default(now())
  updated_at        DateTime         @default(now()) @updatedAt

  @@index([tagihan_id], map: "Pembayaran_tagihan_id_fkey")
  @@map("pembayaran")
}

model Setoran {
  id                Int                @id @default(autoincrement())
  petugas_id        Int
  sub_wilayah_id    Int
  waktu_penyetoran  DateTime
  total             Int
  lokasi_penyetoran LokasiSetoran
  bukti_penyetoran  String
  keterangan        String?
  status            StatusSetoran
  petugas           Petugas            @relation(fields: [petugas_id], references: [id])
  subwilayah        SubWilayah         @relation(fields: [sub_wilayah_id], references: [id])
  created_at        DateTime           @default(now())
  updated_at        DateTime           @default(now()) @updatedAt
  TransaksiPetugas  TransaksiPetugas[]
  TagihanManual     TagihanManual[]

  @@map("setoran")
}

model VirtualAccount {
  id                     Int        @id @default(autoincrement())
  virtual_account_number String
  created_date           DateTime
  created_date_utc       DateTime
  expired_date           DateTime
  expired_date_utc       DateTime
  how_to_pay_api         String
  how_to_pay_page        String
  tagihan_invoice        String
  bank                   String
  status                 String
  pembayaran_id          Int
  pembayaran             Pembayaran @relation(fields: [pembayaran_id], references: [id])
  created_at             DateTime   @default(now())
  updated_at             DateTime   @default(now()) @updatedAt

  @@index([pembayaran_id], map: "virtual_accounts_pembayaran_id_fkey")
  @@map("virtual_accounts")
}

model CheckoutPayment {
  id                   Int      @id @default(autoincrement())
  tagihan_id           Int
  payment_method_types String
  payment_due_date     Int
  url                  String
  expired_date         String
  uuid                 String
  token_id             String
  tagihan              Tagihan  @relation(fields: [tagihan_id], references: [id])
  created_at           DateTime @default(now())
  updated_at           DateTime @default(now()) @updatedAt

  @@map("checkout_payments")
}

enum Jenistagihan {
  MANUAL
  HARIAN
  MINGGUAN
  BULANAN
  TAHUNAN
}

enum StatusBayar {
  NEW
  WAITING
  VERIFIED
  STORED
}

enum MetodePembayaran {
  CASH
  VA
  QRIS
}

enum Status {
  SUCCESS
  WAITING
  FAILED
}

enum TransaksiPetugasStatus {
  SUCCESS
  WAITING
}

enum StatusKontrak {
  DIPROSES
  DITOLAK
  DITERIMA
}

enum StatusSetoran {
  MENUNGGU
  DITOLAK
  DITERIMA
}

enum LokasiSetoran {
  TRANSFER_BANK
  KANTOR
}

enum StatusTagihanManual {
  NEW
  SUCCESS
}
